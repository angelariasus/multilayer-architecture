BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE ejemplares CASCADE CONSTRAINTS';
EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF; END;
/
BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE libros CASCADE CONSTRAINTS';
EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF; END;
/
BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE prestamos CASCADE CONSTRAINTS';
EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF; END;
/
BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE reservas CASCADE CONSTRAINTS';
EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF; END;
/
BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE usuarios CASCADE CONSTRAINTS'; 
EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF; END;
/
BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE categorias CASCADE CONSTRAINTS';
EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF; END;
/
BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE multas CASCADE CONSTRAINTS';  
EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF; END;
/

CREATE TABLE categorias (
    id_categoria NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre VARCHAR2(100) NOT NULL UNIQUE,
    descripcion VARCHAR2(500),
    estado VARCHAR2(20) DEFAULT 'Activa' CHECK (estado IN ('Activa', 'Inactiva')),
    fecha_creacion DATE DEFAULT SYSDATE
);

CREATE TABLE usuarios (
    id_usuario NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre VARCHAR2(200) NOT NULL,
    tipo VARCHAR2(50) NOT NULL CHECK (tipo IN ('Administrativo', 'Bibliotecario', 'Estudiante', 'Docente')),
    estado VARCHAR2(20) DEFAULT 'Activo' CHECK (estado IN ('Activo', 'Bloqueado', 'Inactivo')),
    username VARCHAR2(50) UNIQUE NOT NULL,
    password VARCHAR2(100) NOT NULL,
    email VARCHAR2(100),
    telefono VARCHAR2(20),
    direccion VARCHAR2(300),
    fecha_registro DATE DEFAULT SYSDATE
);

CREATE TABLE libros (
    id_libro NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    titulo VARCHAR2(300) NOT NULL,
    autor VARCHAR2(200) NOT NULL,
    isbn VARCHAR2(20) UNIQUE,
    id_categoria NUMBER,
    cantidad_disponible NUMBER DEFAULT 0,
    cantidad_total NUMBER DEFAULT 0,
    estado VARCHAR2(30) DEFAULT 'Disponible' CHECK (estado IN ('Disponible', 'Agotado', 'Fuera de circulación')),
    fecha_publicacion DATE,
    editorial VARCHAR2(100),
    descripcion CLOB,
    ubicacion VARCHAR2(100),
    fecha_registro DATE DEFAULT SYSDATE,
    CONSTRAINT fk_libro_categoria FOREIGN KEY (id_categoria) REFERENCES categorias(id_categoria)
);

CREATE TABLE ejemplares (
    id_ejemplar NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_libro NUMBER NOT NULL,
    codigo_ejemplar VARCHAR2(50) UNIQUE NOT NULL,
    ubicacion VARCHAR2(100),
    estado VARCHAR2(30) DEFAULT 'Disponible' CHECK (estado IN ('Disponible', 'Prestado', 'Reservado', 'En reparación', 'Perdido', 'Dado de baja')),
    fecha_adquisicion DATE DEFAULT SYSDATE,
    observaciones VARCHAR2(500),
    estado_fisico VARCHAR2(20) DEFAULT 'Bueno' CHECK (estado_fisico IN ('Excelente', 'Bueno', 'Regular', 'Malo')),
    CONSTRAINT fk_ejemplar_libro FOREIGN KEY (id_libro) REFERENCES libros(id_libro)
);

CREATE TABLE reservas (
    id_reserva NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_usuario NUMBER NOT NULL,
    id_libro NUMBER NOT NULL,
    fecha_reserva DATE DEFAULT SYSDATE,
    fecha_vencimiento DATE NOT NULL,
    fecha_recogida DATE,
    estado VARCHAR2(20) DEFAULT 'Activa' CHECK (estado IN ('Activa', 'Cumplida', 'Vencida', 'Cancelada')),
    posicion_cola NUMBER DEFAULT 1,
    observaciones VARCHAR2(500),
    CONSTRAINT fk_reserva_usuario FOREIGN KEY (id_usuario) REFERENCES usuarios(id_usuario),
    CONSTRAINT fk_reserva_libro FOREIGN KEY (id_libro) REFERENCES libros(id_libro)
);

CREATE TABLE prestamos (
    id_prestamo NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_usuario NUMBER NOT NULL,
    id_libro NUMBER NOT NULL,
    id_ejemplar NUMBER NOT NULL,
    fecha_prestamo DATE DEFAULT SYSDATE,
    fecha_devolucion_esperada DATE NOT NULL,
    fecha_devolucion_real DATE,
    estado VARCHAR2(20) DEFAULT 'Activo' CHECK (estado IN ('Activo', 'Devuelto', 'Vencido')),
    observaciones VARCHAR2(500),
    CONSTRAINT fk_prestamo_usuario FOREIGN KEY (id_usuario) REFERENCES usuarios(id_usuario),
    CONSTRAINT fk_prestamo_libro FOREIGN KEY (id_libro) REFERENCES libros(id_libro),
    CONSTRAINT fk_prestamo_ejemplar FOREIGN KEY (id_ejemplar) REFERENCES ejemplares(id_ejemplar)
);

CREATE TABLE multas (
    id_multa NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_prestamo NUMBER NOT NULL,
    monto NUMBER(10,2) NOT NULL,
    fecha_generacion DATE DEFAULT SYSDATE,
    fecha_pago DATE,
    estado VARCHAR2(20) DEFAULT 'Pendiente' CHECK (estado IN ('Pendiente', 'Pagada', 'Cancelada')),
    motivo VARCHAR2(200) NOT NULL,
    dias_retraso NUMBER DEFAULT 0,
    CONSTRAINT fk_multa_prestamo FOREIGN KEY (id_prestamo) REFERENCES prestamos(id_prestamo)
);

-- Índices para consultas frecuentes en usuarios
CREATE INDEX idx_usuarios_username ON usuarios(username);
CREATE INDEX idx_usuarios_tipo ON usuarios(tipo);
CREATE INDEX idx_usuarios_estado ON usuarios(estado);

-- Índices para consultas frecuentes en libros
CREATE INDEX idx_libros_titulo ON libros(titulo);
CREATE INDEX idx_libros_autor ON libros(autor);
CREATE INDEX idx_libros_isbn ON libros(isbn);
CREATE INDEX idx_libros_categoria ON libros(id_categoria);
CREATE INDEX idx_libros_estado ON libros(estado);

-- Índices para ejemplares
CREATE INDEX idx_ejemplares_libro ON ejemplares(id_libro);
CREATE INDEX idx_ejemplares_codigo ON ejemplares(codigo_ejemplar);
CREATE INDEX idx_ejemplares_estado ON ejemplares(estado);

-- Índices para reservas
CREATE INDEX idx_reservas_usuario ON reservas(id_usuario);
CREATE INDEX idx_reservas_libro ON reservas(id_libro);
CREATE INDEX idx_reservas_estado ON reservas(estado);
CREATE INDEX idx_reservas_fecha ON reservas(fecha_reserva);

-- Índices para préstamos
CREATE INDEX idx_prestamos_usuario ON prestamos(id_usuario);
CREATE INDEX idx_prestamos_libro ON prestamos(id_libro);
CREATE INDEX idx_prestamos_ejemplar ON prestamos(id_ejemplar);
CREATE INDEX idx_prestamos_estado ON prestamos(estado);
CREATE INDEX idx_prestamos_fecha_prestamo ON prestamos(fecha_prestamo);
CREATE INDEX idx_prestamos_fecha_devolucion ON prestamos(fecha_devolucion_esperada);

-- Índices para multas
CREATE INDEX idx_multas_prestamo ON multas(id_prestamo);
CREATE INDEX idx_multas_estado ON multas(estado);
CREATE INDEX idx_multas_fecha_generacion ON multas(fecha_generacion);